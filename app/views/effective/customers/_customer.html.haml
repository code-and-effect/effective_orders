%h3.effective-heading Customer

%table.table
  %tbody
    %tr
      %th Id
      %td= customer.stripe_customer.id
    %tr
      %th Email
      %td= customer.stripe_customer.email
    %tr
      %th Card
      %td
        - if customer.stripe_customer.default_source.present?
          - card = customer.stripe_customer.sources.retrieve(customer.stripe_customer.default_source)
          = "**** **** **** #{card.last4} #{card.brand} #{card.exp_month}/#{card.exp_year}"
        - else
          None

    - if customer.stripe_customer.currency.present?
      %tr
        %th Currency
        %td= customer.stripe_customer.currency.to_s.upcase

    - if customer.stripe_customer.account_balance.to_i > 0
      %tr
        %th Balance
        %td= price_to_currency(customer.stripe_customer.account_balance.to_i)

= yield if block_given?

- if customer.stripe_subscription.present?
  %h3.effective-heading Subscription

  %table.table
    %tbody
      %tr
        %th Status
        %td= customer.stripe_subscription.status.presence || 'unknown'

      - if customer.stripe_subscription.discount.present?
        %tr
          %th Coupon
          %td= stripe_coupon_description(customer.stripe_subscription.discount.coupon)

      - if customer.stripe_subscription.start.present?
        %tr
          %th Started
          %td= Time.zone.at(customer.stripe_subscription.start).strftime('%F')

      - if customer.stripe_subscription.ended_at.present?
        %tr
          %th Ended
          %td= Time.zone.at(customer.stripe_subscription.ended_at).strftime('%F')

      - if customer.stripe_subscription.canceled_at.present?
        %tr
          %th Cancelled
          %td= Time.zone.at(customer.stripe_subscription.canceled_at).strftime('%F')

      - if customer.stripe_subscription.current_period_start.present?
        %tr
          %th Current Period Start
          %td= Time.zone.at(customer.stripe_subscription.current_period_start).strftime('%F')

      - if customer.stripe_subscription.current_period_end.present?
        %tr
          %th Current Period End
          %td= Time.zone.at(customer.stripe_subscription.current_period_end).strftime('%F')

      - if customer.stripe_subscription.metadata.present? && false
        %tr
          %th Metadata
          %td= tableize_hash(customer.stripe_subscription.metadata.to_h, th: false)

      - if customer.stripe_subscription.items.present?
        %tr
          %th Plans
          %td= tableize_hash(customer.stripe_subscription.items.inject({}) { |h, item| h[item.plan.name] = item.quantity; h }, th: false)

  - if customer.subscriptions.present?
    %table.table
      %thead
        %tr
          %th Subscribed
          %th Plan
          %th
      %tbody
        - customer.subscriptions.each do |sub|
          %tr
            %td= sub.subscribable
            %td= sub
            %td= link_to 'change', edit_polymorphic_path(sub.subscribable)

- if customer.stripe_subscription.blank?
  %h3.effective-heading Subscription
  %p No current subscriptions

- if customer.stripe_customer.invoices.present?
  %h3.effective-heading Invoices

  %table.table
    %thead
      %tr
        %th Date
        %th Number
        %th Period
        %th Items
        %th Total
    %tbody
      - customer.stripe_customer.invoices.each do |invoice|
        %tr
          %td= Time.zone.at(invoice.date).strftime('%F')
          %td= invoice.id
          %td
            = Time.zone.at(invoice.lines.first.period.start).strftime('%F')
            to
            = Time.zone.at(invoice.lines.first.period.end).strftime('%F')
          %td
            - invoice.lines.each do |line|
              %p #{line.quantity}x #{line.plan.try(:name)} #{line.description}

          %td= price_to_currency(invoice.total)

- if customer.upcoming_invoice.present?
  %p Upcoming Invoice:

  %table.table
    %tbody
      %tr
        %th Date
        %td= Time.zone.at(customer.upcoming_invoice.date).strftime('%F')
      %tr
        %th Period
        %td
          = Time.zone.at(customer.upcoming_invoice.period_start).strftime('%F')
          to
          = Time.zone.at(customer.upcoming_invoice.period_end).strftime('%F')
      %tr
        %th Items
        %td
          %table.table
            %tbody
              - customer.upcoming_invoice.lines.each do |line|
                %tr
                  %td #{line.quantity}x #{line.plan.name}
                  %td #{Time.zone.at(line.period.start).strftime('%F')} to #{Time.zone.at(line.period.end).strftime('%F')}
                  %td= line.description
                  %td= price_to_currency(line.amount)
      %tr
        %th Total
        %td= price_to_currency(customer.upcoming_invoice.total)
