= effective_form_with(model: [:admin, order], engine: true) do |f|
  -# User
  - klass = (f.object.user || current_user).class
  - ajax_url = (effective_resources.users_effective_ajax_index_path unless Rails.env.test?)

  = f.hidden_field :user_type, value: klass.name
  = f.select :user_id, klass.all, ajax_url: ajax_url

  -# Organization
  - if EffectiveOrders.organization_enabled?
    - klass = (f.object.organization || EffectiveOrders.Organization.new).class
    - ajax_url = (effective_resources.organizations_effective_ajax_index_path unless Rails.env.test?)

    = f.hidden_field :organization_type, value: klass.name
    = f.select :organization_id, klass.all, ajax_url: ajax_url

  = f.email_cc_field :cc, hint: "Cc the above on any emailed receipts or payment requests."

  - if f.object.new_record?
    = f.check_box :send_payment_request_to_buyer,
      label: 'Yes, send a payment request email to the buyer and any cc.',
      value: (f.object.send_payment_request_to_buyer.nil? ? EffectiveOrders.send_payment_request_to_buyer : f.object.send_payment_request_to_buyer?)

  %hr

  %h2 Order Items
  = f.has_many :order_items, remove: true do |fc|
    = render 'order_item_fields', f: fc

  %hr

  .row
    .col-md-6.effective-order-note-to-buyer
      %h2 Note to Buyer
      = f.text_area :note_to_buyer, disabled: f.object.purchased?, label: false,
        hint: (f.object.purchased? ? 'This message was displayed to the buyer during checkout and appears on the receipt.' : 'This message will be displayed to the buyer during checkout and will appear on the receipt.')

    .col-md-6.effective-order-internal-note
      %h2 Internal Note
      = f.text_area :note_internal, label: false,
        hint: 'For internal admin use only. This note will never be displayed to the buyer.'

  = render partial: '/admin/orders/order_actions', locals: { order: @order, form: f, f: f }
